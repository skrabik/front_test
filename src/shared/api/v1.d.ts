/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/profiles/init": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Init */
        get: operations["init_api_profiles_init_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/profiles/rating": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Rating */
        get: operations["rating_api_profiles_rating_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/set-dates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Set Dates */
        post: operations["set_dates_api_admin_set_dates_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/profiles/bet": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Bet */
        post: operations["bet_api_profiles_bet_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/profiles/referral": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Referral */
        get: operations["referral_api_profiles_referral_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/profiles/task": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Complete Task */
        post: operations["complete_task_api_profiles_task_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/profiles/game-info": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Game Info */
        get: operations["game_info_api_profiles_game_info_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/profiles/logo-game/start": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Start Logo Game */
        post: operations["start_logo_game_api_profiles_logo_game_start_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/profiles/logo-game/end": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** End Logo Game */
        post: operations["end_logo_game_api_profiles_logo_game_end_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/profiles/withdrawal": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Withdrawal */
        post: operations["withdrawal_api_profiles_withdrawal_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/profiles/bets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Bets */
        get: operations["bets_api_profiles_bets_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/profiles/stars": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Stars Payment */
        post: operations["create_stars_payment_api_profiles_stars_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/profiles/deposit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Deposit */
        post: operations["deposit_api_profiles_deposit_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/callback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Callback */
        post: operations["callback_api_callback_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/profiles/pooling/deposit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Pooling Deposit */
        get: operations["pooling_deposit_api_profiles_pooling_deposit_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Root */
        get: operations["root__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** AccountOperationDepositRequest */
        AccountOperationDepositRequest: {
            /**
             * Currency
             * @enum {string}
             */
            currency: "USDT" | "RUB" | "UZS";
            /** Network */
            network?: "TRON" | null;
            /** Payment Method */
            payment_method?: ("Sber" | "T-Bank" | "Humo" | "Uzcard") | null;
            /** Amount */
            amount: number | null;
        };
        /** AccountOperationWithdrawRequest */
        AccountOperationWithdrawRequest: {
            /**
             * Currency
             * @enum {string}
             */
            currency: "USDT" | "RUB" | "UZS";
            /** Network */
            network?: "TRON" | null;
            /** Payment Method */
            payment_method?: ("Sber" | "T-Bank" | "Humo" | "Uzcard") | null;
            /** Card Number */
            card_number?: string | null;
            /** Address */
            address?: string | null;
            /** Amount */
            amount: number;
        };
        /** AccountOperationWithdrawResponse */
        AccountOperationWithdrawResponse: {
            /**
             * Currency
             * @enum {string}
             */
            currency: "USDT" | "RUB" | "UZS";
            /** Network */
            network?: "TRON" | null;
            /** Payment Method */
            payment_method?: ("Sber" | "T-Bank" | "Humo" | "Uzcard") | null;
            /** Card Number */
            card_number?: string | null;
            /** Address */
            address?: string | null;
            /** Amount */
            amount: number;
            /**
             * Id
             * Format: uuid
             */
            id: string;
        };
        /** AdminSetDateGames */
        AdminSetDateGames: {
            /**
             * Date
             * Format: date-time
             */
            date: string;
            /** Exchange Rate */
            exchange_rate: number;
        };
        /** BankSettings */
        BankSettings: {
            /**
             * Id
             * @description Код банка
             */
            id: string;
            /**
             * Currency
             * @description Мировая валюта
             * @enum {string}
             */
            currency: "RUB" | "USD" | "EUR" | "UZS" | "AZN" | "TJR" | "KZT" | "BYN" | "KGS" | "AMD";
            /**
             * Name
             * @description Название банка
             */
            name: string;
            /**
             * Logo
             * @description Логотип банка в base64 формате (svg)
             */
            logo: string;
            /**
             * Banktype
             * @description Числовой код банка
             */
            bankType: number;
        };
        /** CompleteTaskInput */
        CompleteTaskInput: {
            /** Id */
            id: number;
        };
        /** CreatedInvoiceDto */
        CreatedInvoiceDto: {
            /**
             * Id
             * @description RT ID
             */
            id: number;
            /**
             * Externalid
             * @description ID счета в вашей системе
             */
            externalId: string;
            /**
             * Amount
             * @description Сумма, на которую был выставлен счет
             */
            amount: number;
            /**
             * Usdtprice
             * @description Цена Usdt к рублю на момент создания счета
             */
            usdtPrice: number;
            /**
             * Usdtamount
             * @description Сумма Usdt
             */
            usdtAmount?: number | null;
            /**
             * Expirydate
             * Format: date-time
             * @description Время жизни счета (UTC)
             */
            expiryDate: string;
            /**
             * Cardnumber
             * @description Карта, на которую клиент должен отправить деньги (только для C2C методов)
             */
            cardNumber?: string | null;
            /**
             * Cardholder
             * @description Имя держателя карты/СБП счета
             */
            cardHolder?: string | null;
            /**
             * Bank
             * @description Банк карты
             */
            bank?: string | null;
            /** @description Имя и лого банка карты для оплаты счета */
            bankSettings?: components["schemas"]["BankSettings"] | null;
            /**
             * Paymentmethod
             * @description Платёжный метод
             */
            paymentMethod: string;
        };
        /** GameBet */
        GameBet: {
            /** Game Id */
            game_id: number;
            /**
             * Currency
             * @enum {string}
             */
            currency: "USDT" | "WORDS";
            /** Amount */
            amount: number;
            /**
             * Choice
             * @enum {string}
             */
            choice: "YES" | "NO";
        };
        /** GameBetHistoryResponse */
        GameBetHistoryResponse: {
            /** Id */
            id: number;
            /**
             * Date Game
             * Format: date-time
             */
            date_game: string;
            /** Course */
            course: number;
            /** Course At Computed */
            course_at_computed: number | null;
        };
        /** GameBetResponse */
        GameBetResponse: {
            game: components["schemas"]["GameResponse"];
            /**
             * Currency
             * @enum {string}
             */
            currency: "USDT" | "WORDS";
            /** Amount */
            amount: number;
            /**
             * Choice
             * @enum {string}
             */
            choice: "YES" | "NO";
            /** Actual Balance Usdt */
            actual_balance_usdt: number;
            /** Actual Balance */
            actual_balance: number;
            /** Stats */
            stats: {
                [key: string]: {
                    [key: string]: {
                        [key: string]: number;
                    };
                };
            };
            /** User Bet */
            user_bet: {
                [key: string]: {
                    [key: string]: {
                        [key: string]: number;
                    };
                };
            };
        };
        /** GameResponse */
        GameResponse: {
            /** Id */
            id: number;
            /**
             * Date
             * Format: date-time
             */
            date: string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** Init */
        Init: {
            /** Id */
            id: number;
            /** Nickname */
            nickname: string | null;
            /** Full Name */
            full_name: string;
            /** Avatar */
            avatar: string | null;
            /** Is Admin */
            is_admin: boolean;
            /** Previous Game Results */
            previous_game_results: {
                [key: string]: number;
            };
            /** Balance */
            balance: number;
            /** Balance Usdt */
            balance_usdt: number;
            /** Wins */
            wins: number;
            /** Tasks */
            tasks: {
                [key: string]: components["schemas"]["Tasks"][];
            };
            next_game: components["schemas"]["InitGameResponse"] | null;
            /** Current Token Price */
            current_token_price: number | null;
            /**
             * Daily Task Day
             * @description Число от 1 до 7 или null
             */
            daily_task_day: number;
        };
        /** InitGameResponse */
        InitGameResponse: {
            /** Id */
            id: number;
            /**
             * Date
             * Format: date-time
             */
            date: string;
            /** Stats */
            stats: {
                [key: string]: {
                    [key: string]: {
                        [key: string]: number;
                    };
                };
            };
            /** User Bet */
            user_bet: {
                [key: string]: {
                    [key: string]: {
                        [key: string]: number;
                    };
                };
            };
            /** Course */
            course: number;
        };
        /** InvoiceModel */
        InvoiceModel: {
            /**
             * Entitytype
             * @description Тип сущности
             */
            EntityType: "Invoice" | string;
            /**
             * Id
             * @description Идентификатор счета
             */
            Id: string;
            /**
             * Externalid
             * @description Внешний идентификатор счета
             */
            ExternalId: string;
            /**
             * Status
             * @description Статус счета
             */
            Status: ("Paid" | "Unpaid" | "Cancelled") | string;
            /**
             * Currency
             * @description Валюта счета
             */
            Currency: string;
            /**
             * Amount
             * @description Сумма счета
             */
            Amount: number;
            /**
             * Paidamount
             * @description Фактически оплаченная сумма
             */
            PaidAmount: number;
            /**
             * Usdtprice
             * @description Цена USDT к валюте счета
             */
            UsdtPrice: number;
        };
        /** LogoGameEndResponse */
        LogoGameEndResponse: {
            /**
             * End Time
             * Format: date-time
             */
            end_time: string;
            /** Words Reward */
            words_reward: number;
        };
        /** LogoGameStartResponse */
        LogoGameStartResponse: {
            /**
             * Start Time
             * Format: date-time
             */
            start_time: string;
        };
        /** ProfileBetHistory */
        ProfileBetHistory: {
            /** Id */
            id: number;
            /** Total Rate */
            total_rate: number;
            /**
             * Currency
             * @enum {string}
             */
            currency: "USDT" | "WORDS";
            /**
             * Choice
             * @enum {string}
             */
            choice: "YES" | "NO";
            /** Win Total Rate */
            win_total_rate: number | null;
            game: components["schemas"]["GameBetHistoryResponse"];
            /**
             * Time Created
             * Format: date-time
             */
            time_created: string;
        };
        /** Rating */
        Rating: {
            /** Users */
            users: components["schemas"]["RatingUser"][];
            user: components["schemas"]["RatingUser"];
        };
        /** RatingUser */
        RatingUser: {
            /** Id */
            id: number;
            /** Avatar */
            avatar: string | null;
            /** Full Name */
            full_name: string;
            /** Points */
            points: number;
            /** Place */
            place: number;
        };
        /** ReferralResponse */
        ReferralResponse: {
            /** Referrals */
            referrals: components["schemas"]["ReferralUserResponse"][];
            /** Total Users */
            total_users: number;
            /** Total Usdt */
            total_usdt: number;
            /** Total Words */
            total_words: number;
        };
        /** ReferralUserResponse */
        ReferralUserResponse: {
            /** Full Name */
            full_name: string;
            /** Words */
            words: number;
            /** Usdt */
            usdt: number;
        };
        /** StarsPaymentRequest */
        StarsPaymentRequest: {
            /** Amount Stars */
            amount_stars: number;
        };
        /** StarsPaymentResponse */
        StarsPaymentResponse: {
            /** Payment Url */
            payment_url: string;
        };
        /** Tasks */
        Tasks: {
            /** Id */
            id: number;
            /** Icon */
            icon: string;
            /** Title */
            title: string;
            /**
             * Status
             * @enum {string}
             */
            status: "waiting" | "inProgress" | "done";
            /**
             * Type
             * @enum {string}
             */
            type: "daily" | "link" | "channel";
            /** Link */
            link?: string | null;
            /** Channel */
            channel?: string | null;
            /** Value */
            value?: number | null;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    init_api_profiles_init_get: {
        parameters: {
            query?: {
                ref_id?: number | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Init"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    rating_api_profiles_rating_get: {
        parameters: {
            query?: {
                offset?: number;
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Rating"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    set_dates_api_admin_set_dates_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AdminSetDateGames"][];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AdminSetDateGames"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    bet_api_profiles_bet_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GameBet"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GameBetResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    referral_api_profiles_referral_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ReferralResponse"];
                };
            };
        };
    };
    complete_task_api_profiles_task_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CompleteTaskInput"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Init"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    game_info_api_profiles_game_info_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InitGameResponse"];
                };
            };
        };
    };
    start_logo_game_api_profiles_logo_game_start_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LogoGameStartResponse"];
                };
            };
        };
    };
    end_logo_game_api_profiles_logo_game_end_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LogoGameEndResponse"];
                };
            };
        };
    };
    withdrawal_api_profiles_withdrawal_post: {
        parameters: {
            query?: never;
            header?: {
                "CF-Connecting-IP"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AccountOperationWithdrawRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AccountOperationWithdrawResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    bets_api_profiles_bets_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProfileBetHistory"][];
                };
            };
        };
    };
    create_stars_payment_api_profiles_stars_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StarsPaymentRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StarsPaymentResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    deposit_api_profiles_deposit_post: {
        parameters: {
            query?: never;
            header?: {
                "CF-Connecting-IP"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AccountOperationDepositRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreatedInvoiceDto"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    callback_api_callback_post: {
        parameters: {
            query?: never;
            header: {
                Authorization1: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InvoiceModel"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    pooling_deposit_api_profiles_pooling_deposit_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    root__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
}
